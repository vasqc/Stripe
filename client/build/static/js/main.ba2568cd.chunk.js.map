{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Footer/index.js","App.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","TDS","source","origin","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba2568cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n    if (count === 1) {\n      return name;\n    }\n    return name + 's';\n  }\n  \n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('new-world-water', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('products', { keyPath: '_id' });\n        db.createObjectStore('categories', { keyPath: '_id' });\n        db.createObjectStore('cart', { keyPath: '_id' });\n      };\n  \n      request.onerror = function(e) {\n        console.log('There was an error');\n      };\n  \n      request.onsuccess = function(e) {\n        db = request.result;\n        tx = db.transaction(storeName, 'readwrite');\n        store = tx.objectStore(storeName);\n  \n        db.onerror = function(e) {\n          console.log('error', e);\n        };\n  \n        switch (method) {\n          case 'put':\n            store.put(object);\n            resolve(object);\n            break;\n          case 'get':\n            const all = store.getAll();\n            all.onsuccess = function() {\n              resolve(all.result);\n            };\n            break;\n          case 'delete':\n            store.delete(object._id);\n            break;\n          default:\n            console.log('No valid method');\n            break;\n        }\n  \n        tx.oncomplete = function() {\n          db.close();\n        };\n      };\n    });\n  }","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n//import { images } from \"../../images\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity,\n    TDS,\n    source,\n    origin\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;","import { gql } from \"@apollo/client\";\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      source\n      origin\n      est\n      TDS\n      carbonation\n      company_website\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      source\n      origin\n      est\n      TDS\n      carbonation\n      company_website\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          source\n          origin\n          est\n          TDS\n          carbonation\n          company_website\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n              source={product.source}\n              TDS={product.TDS}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        source\n        origin\n        est\n        TDS\n        carbonation\n        company_website\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The information provided is incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\n//const [showModal, setShowModal] = useState(false);\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/aboutus\">\n              About Us\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\"  aria-label=\"Close\"></span>\n          New World Water\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n        <h2>Stay Thristy!</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;","import React from 'react';\n\nfunction Footer() {\n\n  // Replace links with social media profiles\n  const icons = [\n    {\n      name: \"fab fa-github\",\n      link: \"https://github.com\"\n    },\n    {\n      name: \"fab fa-instagram\",\n      link: \"https://www.instagram.com/finewaters/\"\n    },\n    {\n      name: \"fab fa-youtube\",\n      link: \"hhttps://www.youtube.com/user/finewaters\"\n    }\n  ]\n\n  return (\n    <footer className=\"flex-row px-1\">\n      {icons.map(icon =>\n      (\n        <a href={icon.link} key={icon.name} target=\"_blank\" rel=\"noopener noreferrer\"><i className={icon.name}></i></a>\n      )\n        )}\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Footer from \"./components/Footer\";\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n//serviceWorker.unregister();"],"sourceRoot":""}